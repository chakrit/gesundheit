// Generated by CoffeeScript 1.4.0
var Delete, DeleteQuery, SUDQuery, returnable,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

SUDQuery = require('./sud');

returnable = require('./returnable');

Delete = require('../nodes').Delete;

module.exports = DeleteQuery = (function(_super) {

  __extends(DeleteQuery, _super);

  /* Delete queries only add a 'returning' method to ``SUDQuery``
  */


  function DeleteQuery() {
    return DeleteQuery.__super__.constructor.apply(this, arguments);
  }

  DeleteQuery.rootNode = Delete;

  returnable(DeleteQuery);

  return DeleteQuery;

})(SUDQuery);
